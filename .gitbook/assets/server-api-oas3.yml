openapi: 3.0.0
info:
  contact:
    email: hello@clerk.dev
    name: Clerk
    url: https://www.clerk.dev
  description: A REST API for accessing Clerk data from a Server.
  title: Clerk Server API
  version: "2020-06-16"
  license:
    name: "tbd"
    url: "https://www.example.com"

# servers:
# - url: https://api.clerk.dev
#   description: Server API

tags:
  - name: AllowList
    description: Allow List Request
  - name: BlockList
    description: Block List Request
  - name: Cleanup
    description: Cleanup Request
  - name: Client
    description: Client Request
  - name: Email
    description: Email Request
  - name: ActorToken
    description: Actor Token Request
  - name: InstanceSettings
    description: Instance Settings Request
  - name: Internal
    description: Internal endpoints
  - name: Invitation
    description: Invitation Request
  - name: JWKS
    description: JWKs
  - name: JWTTemplate
    description: JWT Template Request
  - name: Organization
    description: Organization Request
  - name: Redirect URL
    description: Redirect URL Request
  - name: Session
    description: Session Request
  - name: SignInToken
    description: Sign In Token Request
  - name: SMS Message
    description: SMS Message Request
  - name: Template
    description: Template Request
  - name: User
    description: User Request
  - name: Webhooks
    description: Webhook Request

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

security:
  - bearerAuth: []

paths:
  /v1/jwks:
    get:
      description: Retrieve the JSON Web Key Set of the instance
      operationId: jwks
      tags:
        - JWKS
      summary: Retrieve the JSON Web Key Set of the instance
      responses:
        "200":
          description: The JSON Web Key Set

  /v1/public/demo_instance:
    post:
      description: Creates a demo development instance and returns the Frontend/Backend API keys.
      responses:
        "200":
          description: The instance was created successfully.

  /v1/internal/interstitial:
    get:
      description: Interstitial
      operationId: interstitial
      responses:
        "200":
          description: The interstitial page markup

  /v1/public/interstitial:
    get:
      description: Interstitial
      operationId: interstitial
      responses:
        "200":
          description: The interstitial page markup

  /v1/internal/cleanup/dead_sessions:
    post:
      description: cleanup dead sessions
      operationId: cleanupDeadSessions
      tags:
        - Cleanup
      summary: Removes all dead sessions from the database
      responses:
        "204":
          description: Dead sessions were removed successfully
        "403":
          description: Not authorized to perform this operation

  /v1/internal/stripe/sync_plans:
    post:
      description: sync stripe plans
      operationId: syncStripePlans
      tags:
        - Internal
      summary: Syncs subscription plans from stripe
      responses:
        "204":
          description: Plan sync concluded without issue
        "403":
          description: Not authorized to perform this operation

  /v1/internal/dns/enqueue_checks:
    post:
      description: dns checks
      operationId: checkDnsRecords
      tags:
        - Internal
      summary: Syncs subscription plans from stripe
      responses:
        "204":
          description: Plan sync concluded without issue
        "403":
          description: Not authorized to perform this operation

  #
  # client requests
  #
  /v1/clients:
    get:
      operationId: getClientList
      tags:
        - Client
      summary: List all clients
      description: >
        Returns a list of all clients. The clients are returned sorted by creation date,
        with the newest clients appearing first.
      responses:
        "200":
          $ref: "./responses/server-api/Client.yml#/components/responses/Client.List"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/clients/verify:
    post:
      operationId: verifyClient
      tags:
        - Client
      summary: Verify a client
      description: >
        Verifies the client in the provided token
      requestBody:
        description: Parameters.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: false
              properties:
                token:
                  type: string
                  description: A JWT Token that represents the active client.
      responses:
        "200":
          $ref: "./responses/server-api/Client.yml#/components/responses/Client"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/clients/{client_id}:
    get:
      operationId: getClient
      tags:
        - Client
      summary: Get a client
      description: >
        Returns the details of a client.
      parameters:
        - name: client_id
          in: path
          description: Client ID.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: false
              properties:
                token:
                  type: string
      responses:
        "200":
          $ref: "./responses/server-api/Client.yml#/components/responses/Client"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  #
  # email_address requests
  #
  /v1/email_addresses:
    post:
      operationId: createEmailAddress
      tags:
        - EmailAddress
      summary: Create an email address
      description: >
        Create a new email address
      responses:
        "200":
          $ref: "./responses/server-api/EmailAddress.yml#/components/responses/EmailAddress"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/email_addresses/{email_address_id}:
    get:
      operationId: getEmailAddress
      tags:
        - EmailAddress
      summary: Get an email address
      description: >
        Returns the details of an email address.
      parameters:
        - name: email_address_id
          in: path
          description: The Email Address ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/EmailAddress.yml#/components/responses/EmailAddress"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    delete:
      operationId: deleteEmailAddress
      tags:
        - EmailAddress
      summary: Delete an email address
      description: >
        Delete the email address with the given ID.
      parameters:
        - name: email_address_id
          in: path
          description: The Email Address ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/shared/DeletedObject.yml#/components/responses/DeletedObject"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    patch:
      operationId: updateEmailAddress
      tags:
        - EmailAddress
      summary: Update an email address
      description: >
        Updates an email address.
      parameters:
        - name: email_address_id
          in: path
          description: The Email Address ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/EmailAddress.yml#/components/responses/EmailAddress"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  #
  # phone_number requests
  #
  /v1/phone_numbers:
    post:
      operationId: createPhoneNumber
      tags:
        - PhoneNumber
      summary: Create a phone number
      description: >
        Create a new phone number
      responses:
        "200":
          $ref: "./responses/server-api/PhoneNumber.yml#/components/responses/PhoneNumber"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/phone_numbers/{phone_number_id}:
    get:
      operationId: getPhoneNumber
      tags:
        - PhoneNumber
      summary: Get a phone number
      description: >
        Returns the details of a phone number.
      parameters:
        - name: phone_number_id
          in: path
          description: Phone Number ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/PhoneNumber.yml#/components/responses/PhoneNumber"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    delete:
      operationId: deletePhoneNumber
      tags:
        - PhoneNumber
      summary: Delete a phone number
      description: >
        Delete the phone number with the given ID.
      parameters:
        - name: phone_number_id
          in: path
          description: The Phone Number ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/shared/DeletedObject.yml#/components/responses/DeletedObject"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    patch:
      operationId: updatePhoneNumber
      tags:
        - PhoneNumber
      summary: Update a phone number
      description: >
        Updates a phone number.
      parameters:
        - name: phone_number_id
          in: path
          description: The Phone Number ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/PhoneNumber.yml#/components/responses/PhoneNumber"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  #
  # session requests
  #
  /v1/sessions:
    get:
      operationId: getSessionList
      tags:
        - Session
      summary: List all sessions
      description: >
        Returns a list of all sessions. The sessions are returned sorted by creation date,
        with the newest sessions appearing first.
      requestBody:
        description: Optional parameters
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: false
              properties:
                client_id:
                  type: string
                  nullable: true
                user_id:
                  type: string
                  nullable: true
      responses:
        "200":
          $ref: "./responses/server-api/Session.yml#/components/responses/Session.List"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/sessions/{session_id}:
    get:
      operationId: getSession
      tags:
        - Session
      summary: Get a session
      description: >
        Returns the details of a session.
      parameters:
        - name: session_id
          in: path
          description: Session ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/Session.yml#/components/responses/Session"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/sessions/{session_id}/revoke:
    post:
      operationId: revokeSession
      tags:
        - Session
      summary: Revoke a session
      description: >
        Revokes an active session. The user will be forced
        sign in again.
      parameters:
        - name: session_id
          in: path
          description: Session ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/Session.yml#/components/responses/Session"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/sessions/{session_id}/verify:
    post:
      operationId: verifySession
      tags:
        - Session
      summary: Verify a session
      description: >
        Verifies the session that is part of the active client
      parameters:
        - name: session_id
          in: path
          description: Session ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: false
              properties:
                token:
                  type: string
                  description: A JWT Token that represents the active client.
      responses:
        "200":
          $ref: "./responses/server-api/Session.yml#/components/responses/Session"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/sessions/{session_id}/tokens/{template_name}:
    post:
      operationId: createSessionTokenFromTemplate
      tags:
        - Session
      summary: Creates a session token from a jwt template
      description: Creates a session token from the provided jwt template name
      parameters:
        - name: session_id
          in: path
          description: Session ID.
          required: true
          schema:
            type: string
        - name: template_name
          in: path
          description: the template name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  #
  # templates requests
  #
  /v1/templates/{template_type}:
    get:
      operationId: getTemplateList
      description: >
        Returns a list of all templates. The templates are returned sorted by position and also include system templates.
      tags:
        - Template
      parameters:
        - name: template_type
          in: path
          description: Template type.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/Template.yml#/components/responses/Template.List"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/templates/{template_type}/{slug}:
    get:
      operationId: getTemplate
      description: Returns the details of a template.
      tags:
        - Template
      parameters:
        - name: template_type
          in: path
          description: Template type.
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: Slug.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/Template.yml#/components/responses/Template"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    put:
      operationId: upsertTemplate
      description: Creates a new user template (that may override a system template with the same slug) or updates an existing user template
      tags:
        - Template
      parameters:
        - name: template_type
          in: path
          description: Template type.
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: Slug.
          required: true
          schema:
            type: string
      requestBody:
        description: Required parameters
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  description: >
                    user-friendly name of the template
                subject:
                  type: string
                  description: >
                    email subject
                  nullable: true
                markup:
                  type: string
                  description: >
                    the editor markup used to generate the body of the template
                  nullable: true
                body:
                  type: string
                  description: >
                    the template body before variable interpolation
      responses:
        "200":
          $ref: "./responses/server-api/Template.yml#/components/responses/Template"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    delete:
      operationId: deleteTemplate
      description: Deletes a custom user template
      tags:
        - Template
      parameters:
        - name: template_type
          in: path
          description: Template type.
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: Slug.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/shared/DeletedObject.yml#/components/responses/DeletedObject"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/templates/{template_type}/{slug}/revert:
    post:
      operationId: revertTemplate
      description: Reverts an overriden template to its system default
      tags:
        - Template
      parameters:
        - name: template_type
          in: path
          description: Template type.
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: Slug.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/Template.yml#/components/responses/Template"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/templates/{template_type}/{slug}/preview:
    post:
      operationId: previewTemplate
      description: Returns a preview of a template for a given template_type, slug & body
      tags:
        - Template
      parameters:
        - name: template_type
          in: path
          description: Template type.
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: Slug.
          required: true
          schema:
            type: string
      requestBody:
        description: Required parameters
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: false
              properties:
                subject:
                  type: string
                  description: >
                    email subject
                  nullable: true
                body:
                  type: string
                  description: >
                    the template body before variable interpolation
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  #
  # user requests
  #
  /v1/users:
    get:
      operationId: getUserList
      description: >
        Returns a list of all users. The users are returned sorted by creation date,
        with the newest users appearing first.
      tags:
        - User
      responses:
        "200":
          $ref: "./responses/server-api/User.yml#/components/responses/User.List"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    post:
      operationId: createUser
      description: >
        Creates a new user.
      tags:
        - User
      responses:
        "200":
          $ref: "./responses/server-api/User.yml#/components/responses/User"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/users/count:
    get:
      operationId: getUsersCount
      description: >
        Returns a total count of all users that match the given criteria.
      tags:
        - User
      responses:
        "200":
          $ref: "./responses/server-api/User.yml#/components/responses/User.Count"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/users/{user_id}:
    get:
      operationId: getUser
      description: Returns the details of a user.
      tags:
        - User
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/User.yml#/components/responses/User"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

    patch:
      operationId: updateUser
      description: Updates a user.
      tags:
        - User
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/User.yml#/components/responses/User"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    delete:
      operationId: deleteUser
      description: Deletes a user.
      tags:
        - User
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/shared/DeletedObject.yml#/components/responses/DeletedObject"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/users/{user_id}/ban:
    post:
      operationId: banUser
      description: Marks the given user as banned, which means that all his sessions are revoked and he's not allowed to sign in again.
      tags:
        - User
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/User.yml#/components/responses/User"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/users/{user_id}/unban:
    post:
      operationId: unbanUser
      description: Removes the ban mark from the given user.
      tags:
        - User
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/User.yml#/components/responses/User"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/users/{user_id}/metadata:
    patch:
      operationId: updateUserMetadata
      description: Updates user metadata.
      tags:
        - User
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/User.yml#/components/responses/User"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  # OAuth token wallet
  /v1/users/{user_id}/oauth_access_tokens/{provider}:
    get:
      operationId: getOAuthAccessToken
      description: Read the OAuth access token of a user.
      tags:
        - User
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
        - name: provider
          in: path
          description: The OAuth provider.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The OAuth access token of the user, if any.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: false
                  properties:
                    object:
                      type: string
                    token:
                      type: string
                      description: The access token
                    provider:
                      type: string
                      description: The ID of the provider
                    public_metadata:
                      type: object
                    label:
                      type: string
                      nullable: true
                    scopes:
                      type: array
                      items:
                        type: string
                      description: >
                        The list of scopes that the token is valid for.
                        Only present for OAuth 2.0 tokens.
                    token_secret:
                      type: string
                      description: >
                        The token secret. Only present for OAuth 1.0 tokens.
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/users/{user_id}/organization_memberships:
    get:
      operationId: usersGetOrganizationMemberships
      description: Get a paginated list of the user's organization memberships
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "./responses/server-api/Organization.yml#/components/responses/OrganizationMemberships"
        403:
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/users/{user_id}/verify_password:
    post:
      operationId: verifyPassword
      description: Verify the password of a user.
      tags:
        - User
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                password:
                  type: string
                  description: The password of the user
      responses:
        "200":
          description: The provided password was correct.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  verified:
                    type: boolean
                    nullable: false
        "400":
          description: The user does not have a password set.
        "404":
          description: The user does not exist.
        "422":
          description: The provided password was incorrect.
        "500":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/users/{user_id}/mfa:
    delete:
      operationId: disableMFA
      description: Disable user's MFA methods.
      tags:
        - User
      parameters:
        - name: user_id
          in: path
          description: User ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  user_id:
                    type: string
                    nullable: false
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "500":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  # email requests
  #
  /v1/emails:
    post:
      operationId: createEmail
      description: Sends an email.
      tags:
        - Email
      requestBody:
        description: Required parameters
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: false
              properties:
                from_email_name:
                  type: string
                  description: >
                    The email name portion of the sending email address.
                    <br/>e.g.: `from_email_name=info` will send from info@example.com
                subject:
                  type: string
                  description: >
                    The subject of the email.
                  nullable: true
                body:
                  type: string
                  description: >
                    The body of the email.
                  nullable: true
                email_address_id:
                  type: string
                  nullable: true
                  description: >
                    The ID of the email address to send to.
                template_slug:
                  type: string
                  nullable: true
                  description: >
                    The slug of the template to use for sending this email
      responses:
        "200":
          $ref: "./responses/server-api/Email.yml#/components/responses/Email"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  #
  # sms requests
  #
  /v1/sms_messages:
    post:
      operationId: createSMSMessage
      description: Sends an sms message.
      tags:
        - SMS Message
      summary: Create an sms message
      requestBody:
        description: Required parameters
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: false
              properties:
                message:
                  type: string
                  description: >
                    The message to send.
                  nullable: true
                phone_number_id:
                  type: string
                  description: >
                    The ID of the phone number to send to.
                template_slug:
                  type: string
                  nullable: true
                  description: >
                    The slug of the template to use for sending this SMS message
      responses:
        "200":
          $ref: "./responses/server-api/SMSMessage.yml#/components/responses/SMSMessage"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/invitations:
    post:
      description: Create an invitation to sign up to an instance for the given email address
      operationId: createInvitation
      tags:
        - Invitation
      responses:
        "200":
          $ref: "./responses/server-api/Invitations.yml#/components/responses/Invitation"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    get:
      description: Retrieves all non-revoked invitations sorted by creation date
      operationId: listInvitations
      parameters:
        - in: query
          required: false
          name: status
          schema:
            type: string
            enum:
              - pending
              - accepted
              - revoked
      tags:
        - Invitation
      responses:
        "200":
          $ref: "./responses/server-api/Invitations.yml#/components/responses/Invitation.List"

  /v1/invitations/{invitation_id}/revoke:
    post:
      description: Revokes the invitation with the given id
      operationId: revokeInvitation
      tags:
        - Invitation
      parameters:
        - name: invitation_id
          in: path
          description: Invitation ID
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/Invitations.yml#/components/responses/Invitation"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  #
  # allowlist requests
  #
  /v1/allowlist_identifiers:
    get:
      operationId: listInstanceAllowlistIdentifiers
      description: Get a list of all identifiers allowed to sign up to an instance
      tags:
        - InstanceSettings
      summary: Get a list of all identifiers allowed to sign up to an instance
      responses:
        "200":
          $ref: "./responses/server-api/AllowlistIdentifier.yml#/components/responses/AllowlistIdentifier.List"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    post:
      description: Create an identifier allowed to sign up to an instance
      operationId: createInstanceAllowlistIdentifier
      tags:
        - AllowList
      responses:
        "200":
          $ref: "./responses/server-api/AllowlistIdentifier.yml#/components/responses/AllowlistIdentifier"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/allowlist_identifiers/{identifier_id}:
    delete:
      operationId: deleteInstanceAllowlistIdentifier
      description: Delete an indentifier from the instance allowlist
      tags:
        - AllowList
      parameters:
        - name: identifier_id
          in: path
          description: Allowlist identifier ID
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/shared/DeletedObject.yml#/components/responses/DeletedObject"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  #
  # blocklist requests
  #
  /v1/blocklist_identifiers:
    get:
      operationId: listInstanceBlocklistIdentifiers
      description: Get a list of all identifiers which are not allowed to access an instance
      tags:
        - BlockList
      responses:
        "200":
          $ref: "./responses/server-api/BlocklistIdentifier.yml#/components/responses/BlocklistIdentifier.List"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    post:
      description: Create an identifier that is blocked from accessing an instance
      operationId: createInstanceBlocklistIdentifier
      tags:
        - BlockList
      responses:
        "200":
          $ref: "./responses/server-api/BlocklistIdentifier.yml#/components/responses/BlocklistIdentifier"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/blocklist_identifiers/{identifier_id}:
    delete:
      operationId: deleteInstanceBlocklistIdentifier
      description: Delete an identifier from the instance blocklist
      tags:
        - BlockList
      parameters:
        - name: identifier_id
          in: path
          description: Blocklist identifier ID
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/shared/DeletedObject.yml#/components/responses/DeletedObject"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  #
  # admin settings requests
  #
  /v1/beta_features/instance_settings:
    patch:
      operationId: updateInstanceAuthConfig
      description: Updates the settings of an instance
      tags:
        - InstanceSettings
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: false
              properties:
                restricted_to_allowlist:
                  type: boolean
                  nullable: true
                from_email_address:
                  type: string
                  nullable: true
                progressive_sign_up:
                  type: boolean
                  nullable: true
                enhanced_email_deliverability:
                  type: boolean
                  nullable: true
      responses:
        "200":
          $ref: "./responses/server-api/InstanceSettings.yml#/components/responses/InstanceSettings"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/beta_features/domain:
    put:
      operationId: updateProductionInstanceDomain
      description: Updates the domain of a production instance
      tags:
        - InstanceDomain
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                home_url:
                  type: string
                  description: The home_url of the production instance
      responses:
        "202":
          description: Accepted

  /v1/actor_tokens:
    post:
      description: Create an actor token that can be used to impersonate the given user.
      operationId: createActorToken
      tags:
        - ActorToken
      responses:
        "200":
          $ref: "./responses/server-api/ActorToken.yml#/components/responses/ActorToken"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/actor_tokens/{actor_token_id}/revoke:
    post:
      description: Revoke the given actor token.
      operationId: revokeActorToken
      tags:
        - ActorToken
      parameters:
        - name: actor_token_id
          in: path
          description: Actor token id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/ActorToken.yml#/components/responses/ActorToken"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/instance:
    patch:
      operationId: updateInstance
      description: Updates the settings of an instance
      tags:
        - InstanceSettings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                test_mode:
                  type: boolean
                  nullable: true
                hibp:
                  type: boolean
                  description: Whether the instance should be using the HIBP service to check passwords for breaches
                  nullable: true
                enhanced_email_deliverability:
                  type: boolean
                  nullable: true
                support_email:
                  type: string
                  nullable: true
                clerk_js_version:
                  type: string
                  nullable: true
                experimental_allowed_origins:
                  type: array
                  items:
                    type: string

      responses:
        "204":
          description: Accepted
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/instance/restrictions:
    patch:
      operationId: updateInstanceRestrictions
      description: Updates the restriction settings of an instance
      tags:
        - InstanceSettings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                allowlist:
                  type: boolean
                  nullable: true
                blocklist:
                  type: boolean
                  nullable: true
      responses:
        "200":
          $ref: "./responses/server-api/InstanceSettings.yml#/components/responses/InstanceRestrictions"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/instance/organization_settings:
    patch:
      operationId: updateInstanceOrganizationSettings
      description: Updates the organization settings of the instance
      tags:
        - InstanceSettings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                enabled:
                  type: boolean
                  nullable: true
                max_allowed_memberships:
                  type: integer
                  nullable: true
      responses:
        "200":
          $ref: "./responses/server-api/InstanceSettings.yml#/components/responses/OrganizationSettings"

  #
  # webhooks requests
  #
  /v1/webhooks/svix:
    post:
      operationId: createSvixApp
      description: Create a Svix app and associate it with the current instance
      tags:
        - Webhooks
      responses:
        "200":
          $ref: "./responses/server-api/Webhooks.yml#/components/responses/SvixURL"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    delete:
      operationId: deleteSvixApp
      description: Delete a Svix app and associate it with the current instance
      tags:
        - Webhooks
      responses:
        "204":
          description: Svix app was successfully deleted
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/webhooks/svix_url:
    post:
      operationId: generateSvixAuthURL
      description: Generate a new url for accessing the Svix's management dashboard for that particular instance
      tags:
        - Webhooks
      responses:
        "200":
          $ref: "./responses/server-api/Webhooks.yml#/components/responses/SvixURL"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/jwt_templates:
    post:
      description: Create a JWT Template
      operationId: createJWTTemplate
      tags:
        - JWTTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: JWT template name
                  nullable: false
                claims:
                  type: object
                  description: JWT template claims in JSON format
                  nullable: false
                lifetime:
                  type: number
                  description: JWT token lifetime
                  nullable: true
                allowed_clock_skew:
                  type: number
                  description: JWT token allowed clock skew
                  nullable: true
                custom_signing_key:
                  type: boolean
                  description: Whether a custom signing key/algorithm is also
                    provided for this template
                  nullable: false
                signing_algorithm:
                  type: string
                  description: The custom signing algorithm to use when minting
                    JWTs
                  nullable: true
                signing_key:
                  type: string
                  description:
                    The custom signing private key to use when minting
                    JWTs
                  nullable: true
      responses:
        "200":
          $ref: "./responses/server-api/JWTTemplate.yml#/components/responses/JWTTemplate"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    get:
      description: Retrieves all JWT Templates
      operationId: listJWTTemplates
      tags:
        - JWTTemplate
      responses:
        "200":
          $ref: "./responses/server-api/JWTTemplate.yml#/components/responses/JWTTemplate.List"

  /v1/jwt_templates/{template_id}:
    get:
      description: Retrieves a JWT Template with the given id
      operationId: getJWTTemplate
      tags:
        - JWTTemplate
      parameters:
        - name: template_id
          in: path
          description: JWT Template ID
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/JWTTemplate.yml#/components/responses/JWTTemplate"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

    patch:
      description: Updates a JWT Template with the given id
      operationId: updateJWTTemplate
      tags:
        - JWTTemplate
      parameters:
        - name: template_id
          in: path
          description: JWT Template ID
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/JWTTemplate.yml#/components/responses/JWTTemplate"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "402":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

    delete:
      description: Delete a JWT Template with the given id
      operationId: deleteJWTTemplate
      tags:
        - JWTTemplate
      parameters:
        - name: template_id
          in: path
          description: JWT Template ID
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/shared/DeletedObject.yml#/components/responses/DeletedObject"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/organizations:
    get:
      description: Get a list of organizations for an instance
      operationId: indexOrganizations
      tags:
        - Organization
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/Organizations"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    post:
      description: Create an organization and add the given user as admin.
      operationId: createOrganization
      tags:
        - Organization
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/Organization"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/organizations/{organization_id}:
    get:
      description: Get an organization by ID or slug.
      tags:
        - Organization
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: string
          description: The ID or slug of the organization
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/Organization"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

    patch:
      description: Update an organization.
      tags:
        - Organization
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: string
          description: The id of the organization to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  description: The organization name
                  nullable: true
                max_allowed_memberships:
                  type: integer
                  nullable: true
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/Organization"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    delete:
      description: Delete the given organization.
      operationId: deleteOrganization
      tags:
        - Organization
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: string
          description: The id of the organization to delete
      responses:
        "200":
          $ref: "./responses/shared/DeletedObject.yml#/components/responses/DeletedObject"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/organizations/{organization_id}/logo:
    put:
      description: Upload a logo for the organization.
      operationId: uploadOrganizationLogo
      tags:
        - Organization
      parameters:
        - name: organization_id
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/OrganizationWithLogo"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "413":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/organizations/{organization_id}/invitations:
    post:
      description: Create a new organization invitation
      tags:
        - Organization
      operationId: createOrganizationInvitation
      parameters:
        - in: path
          required: true
          name: organization_id
          schema:
            type: string
          description: The organization ID.
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/OrganizationInvitation"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/organizations/{organization_id}/invitations/pending:
    get:
      description: Create a new organization invitation
      tags:
        - Organization
      operationId: listPendingOrganizationInvitations
      parameters:
        - in: path
          required: true
          name: organization_id
          schema:
            type: string
          description: The organization ID.
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/OrganizationInvitations"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/organizations/{organization_id}/invitations/{invitation_id}/revoke:
    post:
      description: Revoke a pending organization invitation
      tags:
        - Organization
      operationId: revokeOrganizationInvitation
      parameters:
        - in: path
          required: true
          name: organization_id
          schema:
            type: string
          description: The organization ID.
        - in: path
          required: true
          name: invitation_id
          schema:
            type: string
          description: The organization invitation ID.
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/OrganizationInvitation"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/organizations/{organization_id}/memberships:
    post:
      description: Create a new organization membership
      tags:
        - Organization
      operationId: createOrganizationMembership
      parameters:
        - in: path
          required: true
          name: organization_id
          schema:
            type: string
          description: The organization ID.
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/OrganizationMembership"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    get:
      description: Get a list of all members of an organization
      tags:
        - Organization
      operationId: listOrganizationMemberships
      parameters:
        - in: path
          required: true
          name: organization_id
          schema:
            type: string
          description: The organization ID.
        - in: query
          required: false
          name: limit
          schema:
            type: number
        - in: query
          required: false
          name: offset
          schema:
            type: number
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/OrganizationMemberships"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/organizations/{organization_id}/memberships/{user_id}:
    patch:
      description: Update organization membership role
      tags:
        - Organization
      operationId: updateOrganizationMembership
      parameters:
        - in: path
          required: true
          name: organization_id
          schema:
            type: string
          description: The organization ID.
        - in: path
          required: true
          name: user_id
          schema:
            type: string
          description: The member ID.
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/OrganizationMembership"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    delete:
      description: Remove a member from an organization.
      tags:
        - Organization
      operationId: deleteOrganizationMembership
      parameters:
        - in: path
          required: true
          name: organization_id
          schema:
            type: string
          description: The organization ID.
        - in: path
          required: true
          name: user_id
          schema:
            type: string
          description: The member ID.
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/OrganizationMembership"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/organizations/{organization_id}/memberships/{user_id}/metadata:
    patch:
      description: Update organization membership metadata
      tags:
        - Organization
      operationId: updateOrganizationMembershipMetadata
      parameters:
        - in: path
          required: true
          name: organization_id
          schema:
            type: string
          description: The organization ID.
        - in: path
          required: true
          name: user_id
          schema:
            type: string
          description: The member ID.
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/OrganizationMembership"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/organizations/{organization_id}/metadata:
    patch:
      operationId: mergeOrganizationMetadata
      description: Merges organization metadata.
      tags:
        - Organization
      parameters:
        - name: organization_id
          in: path
          description: Organization ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/Organization.yml#/components/responses/Organization"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "401":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/redirect_urls:
    post:
      description: Create a Redirect URL
      operationId: createRedirectURL
      tags:
        - RedirectURL
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: Redirect URL value
                  nullable: false
      responses:
        "200":
          $ref: "./responses/server-api/RedirectURL.yml#/components/responses/RedirectURL"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
    get:
      description: Retrieves all Redirect URLs
      operationId: listRedirectURLs
      tags:
        - RedirectURL
      responses:
        "200":
          $ref: "./responses/server-api/RedirectURL.yml#/components/responses/RedirectURL.List"

  /v1/redirect_urls/{id}:
    get:
      description: Retrieves a Redirect URL with the given id
      operationId: getRedirectURL
      tags:
        - RedirectURL
      parameters:
        - name: id
          in: path
          description: Redirect URL ID
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/RedirectURL.yml#/components/responses/RedirectURL"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

    delete:
      description: Delete a RedirectURL with the given id
      operationId: deleteRedirectURL
      tags:
        - RedirectURL
      parameters:
        - name: id
          in: path
          description: Redirect URL ID
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/shared/DeletedObject.yml#/components/responses/DeletedObject"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/sign_in_tokens:
    post:
      description: Create a sign in token for the given user.
      operationId: createSignInToken
      tags:
        - SignInToken
      responses:
        "200":
          $ref: "./responses/server-api/SignInToken.yml#/components/responses/SignInToken"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "422":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/sign_in_tokens/{sign_in_token_id}/revoke:
    post:
      description: Revoke the given sign in token.
      operationId: revokeSignInToken
      tags:
        - SignInToken
      parameters:
        - name: sign_in_token_id
          in: path
          description: Sign in token id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses/server-api/SignInToken.yml#/components/responses/SignInToken"
        "400":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
        "404":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"

  /v1/sign_ups/{id}:
    patch:
      description: Update a sign up
      operationId: updateSignUp
      parameters:
        - name: id
          in: path
          description: The sign up ID
          required: true
          schema:
            type: string
      responses:
        "403":
          $ref: "./responses/shared/Error.yml#/components/responses/ClerkErrors"
